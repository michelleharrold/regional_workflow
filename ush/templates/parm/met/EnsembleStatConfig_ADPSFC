////////////////////////////////////////////////////////////////////////////////
//
// Ensemble-Stat configuration file.
//
// For additional information, see the MET_BASE/config/README file.
//
////////////////////////////////////////////////////////////////////////////////

//
// Output model name to be written
//
model = "${MODEL}_${DOMAIN}";

//
// Output description to be written
// May be set separately in each "obs.field" entry
//
desc = "NA";

////////////////////////////////////////////////////////////////////////////////

//
// Verification grid
//
regrid = {
   to_grid    = ${GRID_VX};
   vld_thresh = 0.5;
   method     = BILIN;
   width      = 2;
   shape      = SQUARE;
}

////////////////////////////////////////////////////////////////////////////////

//
// May be set separately in each "field" entry
//
censor_thresh = [];
censor_val    = [];
cat_thresh    = [];
nc_var_str    = "";

////////////////////////////////////////////////////////////////////////////////

tmp_z2_thresh   = [ >=298, >=303 ];
dpt_z2_thresh   = [ >=293, >=298 ];
wind_z10_thresh = [ >=5, >=10 ];

//
// Ensemble product fields to be processed
//
ens = {
   ens_thresh = 0.05;
   vld_thresh = 1.0;

  field = [
    { name = "TMP";  level = "Z2"; cat_thresh = tmp_z2_thresh;    },
    { name = "DPT";  level = "Z2"; cat_thresh = dpt_z2_thresh;    },
    { name = "WIND"; level = "Z10"; cat_thresh = wind_z10_thresh; }
  ];
}

////////////////////////////////////////////////////////////////////////////////

//
// Forecast and observation fields to be verified
//
fcst = {
  field = [
    { name = "TMP";  level = "Z2"; cat_thresh = tmp_z2_thresh;    },
    { name = "DPT";  level = "Z2"; cat_thresh = dpt_z2_thresh;    },
    { name = "WIND"; level = "Z10"; cat_thresh = wind_z10_thresh; }
  ];
}
obs = {
  field = [
    { name = "TMP";  level = "Z2"; cat_thresh = tmp_z2_thresh;    },
    { name = "DPT";  level = "Z2"; cat_thresh = dpt_z2_thresh;    },
    { name = "WIND"; level = "Z10"; cat_thresh = wind_z10_thresh; }
  ];
}

obs = { wind_thresh = >2.572; };

////////////////////////////////////////////////////////////////////////////////

//
// Point observation filtering options
// May be set separately in each "obs.field" entry
//
message_type = [ "ADPSFC" ];
sid_exc        = [];
obs_thresh     = [ NA ];
obs_quality    = [];
duplicate_flag = UNIQUE;
obs_summary    = NONE;
obs_perc_value = 50;
skip_const     = TRUE;

//
// Mapping of message type group name to comma-separated list of values.
//
message_type_group_map = [
   { key = "SURFACE"; val = "ADPSFC,SFCSHP,MSONET";               },
   { key = "ANYAIR";  val = "AIRCAR,AIRCFT";                      },
   { key = "ANYSFC";  val = "ADPSFC,SFCSHP,ADPUPA,PROFLR,MSONET"; },
   { key = "ONLYSF";  val = "ADPSFC,SFCSHP";                      }
];

//
// Ensemble bin sizes
// May be set separately in each "obs.field" entry
//
ens_ssvar_bin_size = 1.0;
ens_phist_bin_size = 0.05;


//////////////////////////////////////////////////////////////////////////////

//
// Point observation time window
//
obs_window = {
   beg = -900;
   end =  900;
}

////////////////////////////////////////////////////////////////////////////////

//
// Verification masking regions
//
mask = {
   grid = [];
   poly = [ "${MASKS}/EAST.nc",
            "${MASKS}/WEST.nc",
            "${MASKS}/CONUS.nc" ];
   sid  = [];
}

////////////////////////////////////////////////////////////////////////////////

//
// Confidence interval settings
//
ci_alpha  = [ 0.01 ];

////////////////////////////////////////////////////////////////////////////////

//
// Interpolation methods
//
interp = {
   vld_thresh = 1.0;
   type       = [ { method = BILIN; width = 2; } ];
}

////////////////////////////////////////////////////////////////////////////////

//
// Statistical output types
//
output_flag = {
   rhist = STAT;
   phist = STAT;
   orank = NONE;
   ssvar = STAT;
   relp  = STAT;
}

////////////////////////////////////////////////////////////////////////////////

//
// Ensemble product output types
//
ensemble_flag = {
   latlon    = TRUE;
   mean      = TRUE;
   stdev     = TRUE;
   minus     = FALSE;
   plus      = FALSE;
   min       = FALSE;
   max       = FALSE;
   range     = FALSE;
   vld_count = TRUE;
   frequency = TRUE;
   rank      = FALSE;
   weight    = FALSE;
}

////////////////////////////////////////////////////////////////////////////////

grid_weight_flag = NONE;
output_prefix    = "${MODEL}_${DOMAIN}_F${FCST_TIME}_ADPSFC";
version          = "V7.0";

////////////////////////////////////////////////////////////////////////////////
